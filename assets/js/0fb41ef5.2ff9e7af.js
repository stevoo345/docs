"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[802],{6636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"dotnet/refit","title":"Refit","description":"Install Nuget Packages","source":"@site/docs/dotnet/refit.md","sourceDirName":"dotnet","slug":"/dotnet/refit","permalink":"/docs/dotnet/refit","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Options Pattern","permalink":"/docs/dotnet/options-pattern"},"next":{"title":"Redirect Extension","permalink":"/docs/dotnet/root-redirect"}}');var o=n(4848),s=n(8453);const r={},a="Refit",c={},l=[{value:"Install Nuget Packages",id:"install-nuget-packages",level:2},{value:"Konfiguration",id:"konfiguration",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"refit",children:"Refit"})}),"\n",(0,o.jsx)(t.h2,{id:"install-nuget-packages",children:"Install Nuget Packages"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Refit"}),"\n",(0,o.jsx)(t.li,{children:"Refit.HttpClientFactory"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"konfiguration",children:"Konfiguration"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:'title="startup.cs"',children:'var accessToken = builder.Configuration.GetValue<string>("AccessToken");\nbuilder.Services.AddRefitClient<IMovieDbApi>()\n    .ConfigureHttpClient(c =>\n    {\n        c.BaseAddress = new Uri("https://api.themoviedb.org/3");\n        c.DefaultRequestHeaders.Add("Authorization", $"Bearer {accessToken}");\n    });\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:'title="IMovieDbApi.cs"',children:'public interface IMovieDbApi\n{\n    [Get("/search/tv")]\n    Task<MovieDbSearchTvSeriesDto> SearchTv(string query);\n\n    [Get("/search/movie")]\n    Task<MovieDbSearchMovieDto> SearchMovie(string query);\n}\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:'title="TestEndpoint.cs"',children:'public class TestEndpoint(IMovieDbApi movieDbApi) : EndpointWithoutRequest<Ok<TopRatedMoviesDto>>\n{\n    public override void Configure()\n    {\n        Get("test");\n        AllowAnonymous();\n    }\n\n    public override async Task<Ok<TopRatedMoviesDto>> ExecuteAsync(CancellationToken ct)\n    {\n        var topRatedMoviesDto = await movieDbApi.TopRatedMovies();\n        return TypedResults.Ok(topRatedMoviesDto);\n    }\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);