"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[433],{930:(e,n,s)=>{s.d(n,{A:()=>l});const l=s.p+"assets/images/create-lxc-general-bc4ea843c7546475c09c75e0c72427e1.png"},7088:(e,n,s)=>{s.d(n,{A:()=>l});const l=s.p+"assets/images/docker-network-settings-0ef8b5e76a03b35d80e2727d4949ccfc.png"},7183:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"proxmox/create-docker-lxc-container","title":"Create LXC Container","description":"Create ZFS Dataset","source":"@site/docs/proxmox/create-docker-lxc-container.md","sourceDirName":"proxmox","slug":"/proxmox/create-docker-lxc-container","permalink":"/docs/proxmox/create-docker-lxc-container","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Add Devices to Container","permalink":"/docs/proxmox/add-devices"},"next":{"title":"Ubuntu","permalink":"/docs/category/ubuntu"}}');var r=s(4848),t=s(8453);const i={},a="Create LXC Container",d={},c=[{value:"Create ZFS Dataset",id:"create-zfs-dataset",level:2},{value:"Add Storage",id:"add-storage",level:2},{value:"Add nesting",id:"add-nesting",level:2},{value:"General",id:"general",level:2},{value:"Allow root ssh",id:"allow-root-ssh",level:2},{value:"Network settings",id:"network-settings",level:2},{value:"Update + Upgrade",id:"update--upgrade",level:2},{value:"Git installieren und einrichten",id:"git-installieren-und-einrichten",level:2},{value:"Install Git",id:"install-git",level:3},{value:"Git Config",id:"git-config",level:3},{value:"SSH Schl\xfcssel erstellen",id:"ssh-schl\xfcssel-erstellen",level:3},{value:"SSH Agent starten und Schl\xfcssel laden",id:"ssh-agent-starten-und-schl\xfcssel-laden",level:3},{value:"Schl\xfcssel anzeigen und bei Github eintragen",id:"schl\xfcssel-anzeigen-und-bei-github-eintragen",level:3},{value:"Verbindung testen",id:"verbindung-testen",level:3},{value:"Clonen des Projekts",id:"clonen-des-projekts",level:3},{value:"Install Docker",id:"install-docker",level:2},{value:"Verify",id:"verify",level:3},{value:"Disable AppArmor",id:"disable-apparmor",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"create-lxc-container",children:"Create LXC Container"})}),"\n",(0,r.jsx)(n.h2,{id:"create-zfs-dataset",children:"Create ZFS Dataset"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"zfs create tank/docker\n"})}),"\n",(0,r.jsx)(n.h2,{id:"add-storage",children:"Add Storage"}),"\n",(0,r.jsx)(n.p,{children:"Proxmox -> Datacenter -> Storage -> Add -> ZFS"}),"\n",(0,r.jsx)(n.p,{children:"ID: docker\nZFS Pool: tank/docker\nThin provision: checked"}),"\n",(0,r.jsx)(n.h2,{id:"add-nesting",children:"Add nesting"}),"\n",(0,r.jsx)(n.p,{children:"101 docker -> Options -> Features -> Nesting"}),"\n",(0,r.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,r.jsxs)(n.p,{children:["Hostname + Uncheck unprivileged container!\n",(0,r.jsx)(n.img,{alt:"General Image",src:s(930).A+"",width:"739",height:"553"})]}),"\n",(0,r.jsx)(n.h2,{id:"allow-root-ssh",children:"Allow root ssh"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/ubuntu/allow-root-ssh",children:"Follow this instruction guide here"})}),"\n",(0,r.jsx)(n.h2,{id:"network-settings",children:"Network settings"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img.png",src:s(7088).A+"",width:"604",height:"347"})}),"\n",(0,r.jsx)(n.h2,{id:"update--upgrade",children:"Update + Upgrade"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"apt update && apt upgrade\n"})}),"\n",(0,r.jsx)(n.h2,{id:"git-installieren-und-einrichten",children:"Git installieren und einrichten"}),"\n",(0,r.jsx)(n.h3,{id:"install-git",children:"Install Git"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"apt install -y git\n"})}),"\n",(0,r.jsx)(n.h3,{id:"git-config",children:"Git Config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'git config --global user.name "Dein Name"\ngit config --global user.email "deine@mail.tld"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"ssh-schl\xfcssel-erstellen",children:"SSH Schl\xfcssel erstellen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'ssh-keygen -t ed25519 -C "deine@mail.tld" # oder ssh-keygen -t rsa -b 4096 -C "deine@mail.tld"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Alle best\xe4tigen mit Enter."}),"\n",(0,r.jsx)(n.h3,{id:"ssh-agent-starten-und-schl\xfcssel-laden",children:"SSH Agent starten und Schl\xfcssel laden"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'eval "$(ssh-agent -s)"\nssh-add ~/.ssh/id_ed25519 # oder ssh-add ~/.ssh/id_rsa\n'})}),"\n",(0,r.jsx)(n.h3,{id:"schl\xfcssel-anzeigen-und-bei-github-eintragen",children:"Schl\xfcssel anzeigen und bei Github eintragen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cat ~/.ssh/id_ed25519.pub\n"})}),"\n",(0,r.jsx)(n.p,{children:"GitHub: Settings > SSH and GPG keys > New SSH key > Titel vergeben + Key einf\xfcgen & speichern."}),"\n",(0,r.jsx)(n.h3,{id:"verbindung-testen",children:"Verbindung testen"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"ssh -T git@github.com\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clonen-des-projekts",children:"Clonen des Projekts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"git clone git@github.com:OWNER/REPO.git\n"})}),"\n",(0,r.jsx)(n.h2,{id:"install-docker",children:"Install Docker"}),"\n",(0,r.jsxs)(n.p,{children:["Just follow the ",(0,r.jsx)(n.a,{href:"https://docs.docker.com/engine/install/ubuntu/",children:"Docker Installation Guide"})]}),"\n",(0,r.jsx)(n.p,{children:"Current Version:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'apt-get update\napt-get install ca-certificates curl\ninstall -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nchmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \\\n  tee /etc/apt/sources.list.d/docker.list > /dev/null\napt-get update\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n"})}),"\n",(0,r.jsx)(n.h3,{id:"verify",children:"Verify"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker run hello-world\n"})}),"\n",(0,r.jsx)(n.h2,{id:"disable-apparmor",children:"Disable AppArmor"}),"\n",(0,r.jsx)(n.p,{children:"When you get the error for AppArmor, disable it."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker: Error response from daemon: AppArmor enabled on system but the docker-default profile could not be loaded: running '/usr/sbin/apparmor_parser -Kr /var/lib/docker/tmp/docker-default3371994258' failed with output: apparmor_parser: Unable to replace \"docker-default\".  apparmor_parser: Access denied. You need policy admin privileges to manage profiles.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/ubuntu/disable-apparmor",children:"Follow this instruction guide here"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var l=s(6540);const r={},t=l.createContext(r);function i(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);